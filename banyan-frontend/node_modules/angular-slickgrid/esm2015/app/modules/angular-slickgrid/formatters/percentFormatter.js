import { formatNumber } from './../services/utilities';
import { getValueFromParamsOrGridOptions } from './formatterUtilities';
export const percentFormatter = (row, cell, value, columnDef, dataContext, grid) => {
    const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);
    const minDecimal = getValueFromParamsOrGridOptions('minDecimal', columnDef, grid);
    const maxDecimal = getValueFromParamsOrGridOptions('maxDecimal', columnDef, grid);
    const displayNegativeNumberWithParentheses = getValueFromParamsOrGridOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);
    if (isNumber) {
        const percentValue = value * 100;
        return formatNumber(percentValue, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '%');
    }
    return value;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyY2VudEZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItc2xpY2tncmlkLyIsInNvdXJjZXMiOlsiYXBwL21vZHVsZXMvYW5ndWxhci1zbGlja2dyaWQvZm9ybWF0dGVycy9wZXJjZW50Rm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV2RSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBYyxDQUFDLEdBQVcsRUFBRSxJQUFZLEVBQUUsS0FBVSxFQUFFLFNBQWlCLEVBQUUsV0FBZ0IsRUFBRSxJQUFTLEVBQVUsRUFBRTtJQUMzSSxNQUFNLFFBQVEsR0FBRyxDQUFDLEtBQUssS0FBSyxJQUFJLElBQUksS0FBSyxLQUFLLFNBQVMsSUFBSSxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsRyxNQUFNLFVBQVUsR0FBRywrQkFBK0IsQ0FBQyxZQUFZLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2xGLE1BQU0sVUFBVSxHQUFHLCtCQUErQixDQUFDLFlBQVksRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbEYsTUFBTSxvQ0FBb0MsR0FBRywrQkFBK0IsQ0FBQyxzQ0FBc0MsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRTdJLElBQUksUUFBUSxFQUFFO1FBQ1osTUFBTSxZQUFZLEdBQUcsS0FBSyxHQUFHLEdBQUcsQ0FBQztRQUNqQyxPQUFPLFlBQVksQ0FBQyxZQUFZLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxvQ0FBb0MsRUFBRSxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FDMUc7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbHVtbiB9IGZyb20gJy4vLi4vbW9kZWxzL2NvbHVtbi5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBGb3JtYXR0ZXIgfSBmcm9tICcuLy4uL21vZGVscy9mb3JtYXR0ZXIuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgZm9ybWF0TnVtYmVyIH0gZnJvbSAnLi8uLi9zZXJ2aWNlcy91dGlsaXRpZXMnO1xyXG5pbXBvcnQgeyBnZXRWYWx1ZUZyb21QYXJhbXNPckdyaWRPcHRpb25zIH0gZnJvbSAnLi9mb3JtYXR0ZXJVdGlsaXRpZXMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHBlcmNlbnRGb3JtYXR0ZXI6IEZvcm1hdHRlciA9IChyb3c6IG51bWJlciwgY2VsbDogbnVtYmVyLCB2YWx1ZTogYW55LCBjb2x1bW5EZWY6IENvbHVtbiwgZGF0YUNvbnRleHQ6IGFueSwgZ3JpZDogYW55KTogc3RyaW5nID0+IHtcclxuICBjb25zdCBpc051bWJlciA9ICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSAnJykgPyBmYWxzZSA6ICFpc05hTigrdmFsdWUpO1xyXG4gIGNvbnN0IG1pbkRlY2ltYWwgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckdyaWRPcHRpb25zKCdtaW5EZWNpbWFsJywgY29sdW1uRGVmLCBncmlkKTtcclxuICBjb25zdCBtYXhEZWNpbWFsID0gZ2V0VmFsdWVGcm9tUGFyYW1zT3JHcmlkT3B0aW9ucygnbWF4RGVjaW1hbCcsIGNvbHVtbkRlZiwgZ3JpZCk7XHJcbiAgY29uc3QgZGlzcGxheU5lZ2F0aXZlTnVtYmVyV2l0aFBhcmVudGhlc2VzID0gZ2V0VmFsdWVGcm9tUGFyYW1zT3JHcmlkT3B0aW9ucygnZGlzcGxheU5lZ2F0aXZlTnVtYmVyV2l0aFBhcmVudGhlc2VzJywgY29sdW1uRGVmLCBncmlkLCBmYWxzZSk7XHJcblxyXG4gIGlmIChpc051bWJlcikge1xyXG4gICAgY29uc3QgcGVyY2VudFZhbHVlID0gdmFsdWUgKiAxMDA7XHJcbiAgICByZXR1cm4gZm9ybWF0TnVtYmVyKHBlcmNlbnRWYWx1ZSwgbWluRGVjaW1hbCwgbWF4RGVjaW1hbCwgZGlzcGxheU5lZ2F0aXZlTnVtYmVyV2l0aFBhcmVudGhlc2VzLCAnJywgJyUnKTtcclxuICB9XHJcbiAgcmV0dXJuIHZhbHVlO1xyXG59O1xyXG4iXX0=