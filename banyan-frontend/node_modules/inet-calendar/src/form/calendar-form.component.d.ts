import { AfterViewInit, ElementRef } from '@angular/core';
import { CalendarService } from "../calendar.service";
import { CalendarDialogRepeatComponent } from "../dialog-repeat/dialog-repeat.component";
import { ActivatedRoute, Router } from "@angular/router";
import { NotificationService, HttpClientService } from 'inet-core';
import { CalendarDialogDelete } from "../dialog-delete/dialog-delete.component";
import { AttachmentListComponent } from "../attachment-list/attachment-list.component";
import { CalEvent, CalRepeat } from "../utils/model/CalEvent";
import { CalAttendee } from "../utils/model/CalAttendee";
import { Observable } from "rxjs";
import { TypeaheadMatch } from "ngx-bootstrap";
export declare class CalendarFormComponent implements AfterViewInit {
    private route;
    private calendarService;
    private notify;
    private router;
    private http;
    repeatModal: CalendarDialogRepeatComponent;
    viewDeleteModal: CalendarDialogDelete;
    titleInput: ElementRef;
    attendeeInput: ElementRef;
    fileList: AttachmentListComponent;
    event: CalEvent;
    repeatText: string;
    eventNotFound: boolean;
    timeError: boolean;
    attendeeModal: any;
    formData: {
        title: string;
        date: string;
        startTime: string;
        toTime: string;
        location: string;
        summary: string;
        state: string;
        notes: string;
        repeat: boolean;
        _allday: string;
    };
    attendees: CalAttendee[];
    private _attendees;
    constructor(route: ActivatedRoute, calendarService: CalendarService, notify: NotificationService, router: Router, http: HttpClientService);
    ngAfterViewInit(): void;
    private _initForm;
    createEvent(): void;
    private _onSuccess;
    private _getFormData;
    private _hasAttendee;
    attendeeSearch: Observable<{}>;
    addAttendee(e: TypeaheadMatch): void;
    locationSearch: Observable<{}>;
    private _validate;
    setRepeatData(data: CalRepeat): void;
    openRepeat(checked: boolean): void;
    onEditRepeat(e: any): void;
    private _clearRepeat;
    private _updateMyState;
    goBack(): void;
    onRemoveEvent(event: any): void;
    private getMinutes;
}
