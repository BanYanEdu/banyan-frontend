import { MessageSignHash } from "./model/MessageSignHash";
import { CertData } from "./model/CertData";
import { ReplyData } from "./model/ReplyData";
export declare class WebTokenSigner {
    isChrome: boolean;
    isFirefox: boolean;
    isWindows: boolean;
    osSupported: boolean;
    browserSupported: boolean;
    appInstalled: boolean;
    readonly extInstalled: boolean;
    appInfo: {
        version: any;
        nativeVersion: any;
        nativeLatestVersion: any;
    };
    textOsUnSupport: string;
    textBrowserUnSupport: string;
    textExtNotInstalled: string;
    textAppNotInstalled: string;
    title: string;
    description: string;
    textOk: string;
    textCancel: string;
    certNotFound: string;
    textIssuer: string;
    textValid: string;
    zIndex: number;
    private _dialog;
    private _certEl;
    private _certs;
    private _certCallback;
    constructor();
    checkReady(silent?: boolean): Promise<boolean>;
    checkNativeUpdate(): boolean;
    loadCerts(): Promise<CertData[]>;
    signHash(data: MessageSignHash): Promise<ReplyData>;
    selectCert(forceSelect?: boolean): Promise<{}>;
    dateDisplay(dateStr: string): string;
    private _postExt;
    private _loadAppInfo;
    private _createCertDialog;
    private _buildCertHtml;
    private _onClickCertEl;
    private _findCerEl;
    private _closeDialog;
    private _onEscapeKey;
}
