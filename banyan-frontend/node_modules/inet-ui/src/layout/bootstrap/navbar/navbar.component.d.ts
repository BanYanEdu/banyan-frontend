import { OnInit, EventEmitter, OnDestroy, TemplateRef, ElementRef } from '@angular/core';
import { CoreService, UserProfileService } from 'inet-core';
import { TranslateService } from "@ngx-translate/core";
import { OrganizationService } from "../../../organization/organization.service";
import { Router } from "@angular/router";
import { CloudTranslateService } from "../../../translate/cloud-translate.service";
import { NotifyMessageService } from "../../../common/notify-message.service";
export declare class AdminNavbarComponent implements OnInit, OnDestroy {
    private coreService;
    private router;
    private userProfileService;
    private orgService;
    private cloudTranslateService;
    private messageService;
    translate: TranslateService;
    navbarItemTpl: TemplateRef<ElementRef>;
    profileItemTpl: TemplateRef<ElementRef>;
    navbarMenuTpl: TemplateRef<ElementRef>;
    hideToggler: boolean;
    hideTogglerButton: boolean;
    hideCompanyMenu: boolean;
    hideProfileMenu: boolean;
    hideSearch: boolean;
    applicationName: string;
    homeRouterLink: string;
    noteRouterLink: string;
    messageCount: string;
    hideBrandName: boolean;
    hideLogo: boolean;
    onToggleMenu: EventEmitter<void>;
    onToggleMessageSideNav: EventEmitter<void>;
    onToggleAppSideNav: EventEmitter<void>;
    onToggleSocialSideNav: EventEmitter<void>;
    onToggleNoteSideNav: EventEmitter<void>;
    onClickLogo: EventEmitter<string>;
    visibleChatIcon: boolean;
    visibleMessageIcon: boolean;
    visibleAppIcon: boolean;
    visibleNoteIcon: boolean;
    avatarUrl: string;
    displayName: any;
    brandName: string;
    brandLink: ElementRef;
    langs: Array<string>;
    currentLanguage: string;
    logoUrl: string;
    constructor(coreService: CoreService, router: Router, userProfileService: UserProfileService, orgService: OrganizationService, cloudTranslateService: CloudTranslateService, messageService: NotifyMessageService, translate: TranslateService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    logout(): void;
    toggleMenu(): void;
    toggleMessageSideNav($event: any): void;
    toggleAppSideNav($event: any): void;
    toggleNoteNav($event: any): void;
    changeLanguage(lang: string): void;
    updateImageUrl($event: any): void;
    updateBlankImage($event: any): void;
    countMessage(): void;
    setMessageCount(v: string): void;
    clickLogo($event: any): void;
}
