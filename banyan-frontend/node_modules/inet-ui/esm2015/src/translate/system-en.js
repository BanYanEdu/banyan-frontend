/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export var systemEnLocale = {
    abbr: 'en',
    vi: 'Vietnamese',
    en: 'English',
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd, D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: (/**
     * @param {?} _num
     * @return {?}
     */
    function (_num) {
        /** @type {?} */
        let num = Number(_num);
        /** @type {?} */
        let b = num % 10;
        /** @type {?} */
        let output = (~~(num % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
        return num + output;
    }),
    week: {
        dow: 1,
        doy: 4 // The week that contains Jan 4th is the first week of the year.
    },
    grid: {
        displayMsg: 'Displaying <b>{0}</b> - <b>{1}</b> of <b>{2}</b>',
        emptyMsg: 'No data to display',
        beforePageText: 'Page',
        afterPageText: 'of {0}',
        firstText: 'First Page',
        prevText: 'Previous Page',
        nextText: 'Next Page',
        lastText: 'Last Page',
        refreshText: 'Refresh',
        searchText: 'Search',
        searchPlaceholder: 'Keyword',
        downloadText: 'Download',
        translations: {
            headerReload: 'Reload',
            headerColumnSelector: 'Column selector',
            indexColumn: 'Index',
            selectColumn: 'Select',
            selectRow: 'Select',
            selectAllRows: 'Select',
            expandColumn: 'Expand',
            expandRow: 'Expand',
            paginationLimit: 'Limit',
            paginationRange: 'Results',
            firstText: 'First Page',
            prevText: 'Previous Page',
            nextText: 'Next Page',
            lastText: 'Last Page'
        }
    },
    TOOLBAR: {
        ADD: 'Create',
        EDIT: 'Edit',
        SAVE: 'Save',
        UPDATE: 'Update',
        DELETE: 'Delete',
        SEARCH: 'Search',
        OK: 'Ok',
        CANCEL: 'Cancel',
        RESET: 'Reset',
        BACK: 'Back',
        CLOSE: 'Close',
        DOWNLOAD: 'Download'
    },
    COMMON: {
        WELCOME: 'Welcome',
        PLACEHOLDER_SEARCH: 'Search ...',
        NOTIFICATION: {
            TITLE: 'Notifications',
            EMPTY_MSG: 'No data to display',
            LOAD_MORE: 'Load more',
            ITEMS: 'item(s)',
            CLEAR_ALL: 'Clear all messages'
        },
        APPLICATION: {
            TITLE: 'Application',
            EVENTS_TODAY: 'Events today',
            NEW_ACTIVITY: 'New activity'
        },
        MENU: {
            LANGUAGE: 'Language',
            HOME: 'Home',
            USER_PROFILE: 'Profile',
            ORGANIZATION_INFORMATION: 'Organization information',
            SIGNATURE: 'Signature',
            CONFIG: 'Configuration',
            ABOUT: 'About',
            LOGOUT: 'Logout',
            BACK: 'Back'
        },
        SELECTION: {
            DEFAULT_VALUE: '- Select -'
        },
        MODULE: {
            ADDRESS: {
                CITY: 'Province/City',
                COUNTRY: 'Country',
                DISTRICT: 'District',
                ADDRESS: 'Address',
                STREET: 'Street',
                ADDRESS_REQUIRED_MSG: 'Address field is required',
                COUNTRY_REQUIRED_MSG: 'Country field is required'
            },
            ORGANIZATION: {
                TITLE: 'Organization',
                CODE: 'Code',
                NAME: 'Name',
                FOREIGN_NAME: 'Foreign name',
                ABBREVIATION_NAME: 'Abbreviation name',
                TAX_CODE: 'Tax Code',
                BILLING_ADDRESS: 'Billing address',
                LEGAL_REPRESENTATIVE: 'Legal representative',
                WEBSITE: 'Website',
                INDUSTRY: 'Industry',
                COMPANY_SIZE: 'Company size',
                DESCRIPTION: 'Description',
                LINK: 'Link',
                CODE_REQUIRED_MSG: 'Code field is required',
                NAME_REQUIRED_MSG: 'Name field is required',
                EMAIL: 'Email',
                EMAIL_INVALID_MSG: 'Email must be a valid email',
                PHONE: 'Phone',
                FAX: 'Fax',
                CITY: 'Province/City',
                LANGUAGE: 'Language',
                CHOSEN_IMAGE: 'Chosen Logo ...',
                STANDARD_IMAGE_SIZE: 'Standard image size',
                UPDATE_LOGO_ERROR_MSG: 'Can not update logo.Error while updating logo',
                EMPLOYEES: 'employees',
                SELF_EMPLOYED: 'Self-employed',
                REMOVE_LOGO: 'Remove Logo',
                SAVE_LOGO: 'Save Logo',
                UPDATE_SUCCESSFUL_MSG: 'Information was updated successfully',
                UPDATE_ERROR_MSG: 'Can not update.Error while updating information',
                TAXCODE_REQUIRED_MSG: 'Taxcode field is required',
            },
            USER_PROFILE: {
                TITLE: 'Profile',
                USERNAME: 'Username',
                LAST_NAME: 'Last name',
                MIDDLE_NAME: 'Middle name',
                FIRST_NAME: 'First name',
                BIRTHDAY: 'Birthday',
                PHONE: 'Phone',
                MOBILE: 'Mobile',
                FULL_NAME: 'Full name',
                EMAIL: 'Email',
                GROUP_NAME: 'Group Name',
                DESCRIPTION: 'Description',
                GENDER: 'Gender',
                MALE: 'Male',
                FEMALE: 'Female',
                OTHER: 'Other',
                FIRST_NAME_REQUIRED_MSG: 'First name field is required',
                LAST_NAME_REQUIRED_MSG: 'Last Name field is required',
                EMAIL_REQUIRED_MSG: 'Email field is required',
                EMAIL_INVALID_MSG: 'Email must be a valid email',
                GENERAL_INFORMATION: 'General information',
                CHOSEN_IMAGE: 'Chosen avatar ...',
                SECURITY_INFORMATION: 'Security information',
                CURRENT_PASSWORD: 'Current Password',
                NEW_PASSWORD: 'New Password',
                CONFIRM_NEW_PASSWORD: 'Confirm new password',
                CHANGE_PASSWORD: 'Change password',
                CURRENT_PASSWORD_REQUIRED_MSG: 'Please enter the current password',
                NEW_PASSWORD_REQUIRED_MSG: 'Please enter a new password',
                CONFIRM_NEW_PASSWORD_REQUIRED_MSG: 'Please enter a new password again',
                PASSWORD_DO_NOT_MATCH: 'New password do not match',
                CHANGE_PASSWORD_INFO_MSG: 'Please enter the your current password, then your new password twice',
                CHANGE_PASSWORD_SUCCESSFUL_MSG: 'Password was changed successfully',
                CHANGE_PASSWORD_ERROR_MSG: 'Can not change password.Error while changing password',
                CURRENT_PASSWORD_INCORRECT: 'Current password is incorrect. Please try again',
                UPDATE_PROFILE_SUCCESSFUL_MSG: 'Profile was updated successfully',
                UPDATE_PROFILE_ERROR_MSG: 'Can not update profile.Error while updating profile',
                AVATAR: 'Avatar',
                SAVE_IMAGE: 'Apply',
                REMOVE_IMAGE: 'Remove',
                IMAGE_UPDATE_SUCCESSFUL_MSG: 'Avatar was updated successfully',
                IMAGE_UPDATE_ERROR_MSG: 'Can not update.Error while updating avatar',
                IMAGE_REMOVE_SUCCESSFUL_MSG: 'Avatar was deleted successfully',
                IMAGE_REMOVE_ERROR_MSG: 'Can not remove.Error while removing avatar',
                SIGNATURE_INFORMATION: 'Signature information',
                ACCESS_ROLE: 'Access role',
                SIGNATURE_VERIFY: 'Phone number',
                SIGNATURE_FILE: 'Signature File',
                SIGNATURE_VERIFY_REQUIRED_MSG: 'Phone number field is required',
                UPDATE_SIGNATURE_SUCCESSFUL_MSG: 'Signature was updated successfully',
                UPDATE_SIGNATURE_ERROR_MSG: 'Can not update signature.Error while updating signature',
                SIGNATURE_FILE_REQUIRED_MSG: 'Please select a signature image to update',
                UPDATE_SIGNATURE: 'Update signature',
                NO_FILE: 'No File ...',
                CHOOSE: 'Choose'
            },
            VIEWER: {
                UNSUPPORTED: 'We\'re sorry, an error occurred when trying to view the document <br /> File format is not supported'
            },
            CROPPER: {
                TITLE: 'Image Cropper',
                SELECT_NEW_IMAGE: 'Select new image ...'
            },
            SIGNATURE_MANAGE: {
                CREATE_SIGN: 'Create signature',
                TITLE: 'Signature',
                NAME: 'Signature name',
                NAME_REQUIRED_MSG: 'Name field is required',
                MOBILE: 'Mobile',
                ISSUED: 'Issued',
                FILE: 'File',
                RESULTS: 'Results',
                FILE_REQUIRED_MSG: 'File field is required',
                PHOTO: 'Photo',
                DELETE_SUCCESSFUL_MSG: 'Signature was deleted successfully',
                DELETE_ERROR_MSG: 'Can not delete.Error while deleting signature',
                SAVE_SUCCESSFUL_MSG: 'Signature was saved successfully',
                SAVE_ERROR_MSG: 'Can not save.Error while saving signature',
                NO_INFORMATION: 'No matches found',
                KEY_SEARCH: 'Please sure that that the keyword you need to search for a primary.'
            },
            EMAIL_TEMPLATE: {
                "SEND_TEST": "Send test",
                "EMAIL": "Email template",
                "LIST": "Email template list",
                "ADD_EMAIL": "Add new email template",
                "EDIT_EMAIL": "Edit email template",
                "EMAIL_CODE": "Code",
                "EMAIL_NAME": "Name",
                "EMAIL_SUBJECT": "Subject",
                "EMAIL_CONTENT": "Content",
                "NOTE": "Note",
                "SAMPLE_INFORMATION": "Sample information",
                "SYSTEM_INFORMATION": "System configuration information",
                "TO": "To",
                "FROM": "From",
                "EMAIL_CODE_EXIST_MSG": "Email code already exists",
                "EMAIL_CODE_REQUIRED": "Email code field is required",
                "EMAIL_NAME_REQUIRED": "Email name field is required",
                "ADD_SUCCESS": "Email template was saved successfully.",
                "ADD_ERROR": "Can not save.Error while saving email template.",
                "UPDATE_SUCCESS": "Email template was updated successfully.",
                "UPDATE_ERROR": "Can not update.Error while updating email template.",
                "DELETE_SUCCESS": "Email template was deleted successfully.",
                "DELETE_ERROR": "Can not delete.Error while deleting email template.",
                "DELETE_TITLE": "Delete email template?",
                "DELETE_CONTENT": "Are you sure want to delete this?",
                "ACTIVE": "Active"
            },
            REPORT_TEMPLATE: {
                "TITLE": "Report template",
                "LIST": 'Templates',
                "ADD": "Add",
                "APPLICATION": "Application",
                "MODULE": "Module",
                "TYPE": "Type",
                "VERSION": "Version",
                "NAME": "Name",
                "DESCRIPTION": "Description",
                "FILE_UPLOAD": "File upload",
                "APPLICATION_REQUIRED": "Application field is required",
                "MODULE_REQUIRED": "Module field is required",
                "TYPE_REQUIRED": "Type field is required",
                "VERSION_REQUIRED": "Version field is required",
                "NAME_REQUIRED": "Name field is required",
                "DESCRIPTION_REQUIRED": "Description field is required",
                "ADD_SUCCESS": "Form management was added successfully",
                "ADD_ERROR": "Can not add.Error while adding template",
                "UPDATE_SUCCESS": "Form management was updated successfully",
                "UPDATE_ERROR": "Can not update.Error while updating template",
                "DELETE_SUCCESS": "Form management was deleted successfully",
                "DELETE_ERROR": "Can not delete.Error while deleting template",
                "DELETE_TITLE": "Delete template",
                "DELETE_CONTENT": "Are you sure you want to delete the selected template?",
                "NO_FILE": "No File ...",
                "CHOOSE": "Choose"
            }
        }
    },
    INDICATOR: {
        LOADING: 'Loading ...',
        PROCESSING: 'Processing ...',
        SAVING: 'Saving ...',
        UPDATING: 'Updating ...'
    },
    "ALL_SELECTED": "All Selected",
    "CANCEL": "Cancel",
    "CLEAR_ALL_FILTERS": "Clear All Filters",
    "CLEAR_ALL_SORTING": "Clear All Sorting",
    "COLUMNS": "Columns",
    "COMMANDS": "Commands",
    "CONTAINS": "Contains",
    "ENDS_WITH": "Ends With",
    "EQUALS": "Equals",
    "EXPORT_TO_CSV": "Export in CSV format",
    "EXPORT_TO_TAB_DELIMITED": "Export in Text format (Tab delimited)",
    "FROM_TO_OF_TOTAL_ITEMS": "{{from}}-{{to}} of {{totalItems}} items",
    "FORCE_FIT_COLUMNS": "Force fit columns",
    "INVALID_FLOAT": "The number must be valid and have a maximum of {{maxDecimal}} decimals.",
    "GROUP_BY": "Group by",
    "HIDE_COLUMN": "Hide Column",
    "IN_COLLECTION_SEPERATED_BY_COMMA": "Search items in a collection, must be separated by a comma (a,b)",
    "ITEMS": "Items",
    "ITEMS_PER_PAGE": "items per page",
    "NOT_IN_COLLECTION_SEPERATED_BY_COMMA": "Search items not in a collection, must be separated by a comma (a,b)",
    "OF": "of",
    "PAGE": "Page",
    "PAGE_X_OF_Y": "page {{x}} of {{y}}",
    "REFRESH_DATASET": "Refresh Dataset",
    "REMOVE_FILTER": "Remove Filter",
    "REMOVE_SORT": "Remove Sort",
    "SAVE": "Save",
    "SELECT_ALL": "Select All",
    "SORT_ASCENDING": "Sort Ascending",
    "SORT_DESCENDING": "Sort Descending",
    "STARTS_WITH": "Starts With",
    "SYNCHRONOUS_RESIZE": "Synchronous resize",
    "TOGGLE_FILTER_ROW": "Toggle Filter Row",
    "TOGGLE_PRE_HEADER_ROW": "Toggle Pre-Header Row",
    "X_OF_Y_SELECTED": "# of % selected",
};
//# sourceMappingURL=data:application/json;base64,