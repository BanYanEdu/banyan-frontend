export class Constants {
}
Constants.TEXT_CANCEL = 'Cancel';
Constants.TEXT_CLEAR_ALL_FILTERS = 'Clear All Filters';
Constants.TEXT_CLEAR_ALL_SORTING = 'Clear All Sorting';
Constants.TEXT_COLUMNS = 'Columns';
Constants.TEXT_COMMANDS = 'Commands';
Constants.TEXT_EXPORT_IN_CSV_FORMAT = 'Export in CSV format';
Constants.TEXT_EXPORT_IN_TEXT_FORMAT = 'Export in Text format (Tab delimited)';
Constants.TEXT_FORCE_FIT_COLUMNS = 'Force fit columns';
Constants.TEXT_HIDE_COLUMN = 'Hide Column';
Constants.TEXT_REFRESH_DATASET = 'Refresh Dataset';
Constants.TEXT_REMOVE_FILTER = 'Remove Filter';
Constants.TEXT_REMOVE_SORT = 'Remove Sort';
Constants.TEXT_SAVE = 'Save';
Constants.TEXT_SYNCHRONOUS_RESIZE = 'Synchronous resize';
Constants.TEXT_SORT_ASCENDING = 'Sort Ascending';
Constants.TEXT_SORT_DESCENDING = 'Sort Descending';
Constants.TEXT_TOGGLE_FILTER_ROW = 'Toggle Filter Row';
Constants.TEXT_TOGGLE_PRE_HEADER_ROW = 'Toggle Pre-Header Row';
Constants.VALIDATION_REQUIRED_FIELD = 'Field is required';
Constants.VALIDATION_EDITOR_VALID_NUMBER = 'Please enter a valid number';
Constants.VALIDATION_EDITOR_VALID_INTEGER = 'Please enter a valid integer number';
Constants.VALIDATION_EDITOR_INTEGER_BETWEEN = 'Please enter a valid integer number between {{minValue}} and {{maxValue}}';
Constants.VALIDATION_EDITOR_INTEGER_MAX = 'Please enter a valid integer number that is lower than {{maxValue}}';
Constants.VALIDATION_EDITOR_INTEGER_MIN = 'Please enter a valid integer number that is greater than {{minValue}}';
Constants.VALIDATION_EDITOR_NUMBER_BETWEEN = 'Please enter a valid number between {{minValue}} and {{maxValue}}';
Constants.VALIDATION_EDITOR_NUMBER_MAX = 'Please enter a valid number that is lower than {{maxValue}}';
Constants.VALIDATION_EDITOR_NUMBER_MIN = 'Please enter a valid number that is greater than {{minValue}}';
Constants.VALIDATION_EDITOR_DECIMAL_BETWEEN = 'Please enter a valid number with a maximum of {{maxDecimal}} decimals';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1zbGlja2dyaWQvIiwic291cmNlcyI6WyJhcHAvbW9kdWxlcy9hbmd1bGFyLXNsaWNrZ3JpZC9jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxPQUFPLFNBQVM7O0FBQ2IscUJBQVcsR0FBRyxRQUFRLENBQUM7QUFDdkIsZ0NBQXNCLEdBQUcsbUJBQW1CLENBQUM7QUFDN0MsZ0NBQXNCLEdBQUcsbUJBQW1CLENBQUM7QUFDN0Msc0JBQVksR0FBRyxTQUFTLENBQUM7QUFDekIsdUJBQWEsR0FBRyxVQUFVLENBQUM7QUFDM0IsbUNBQXlCLEdBQUcsc0JBQXNCLENBQUM7QUFDbkQsb0NBQTBCLEdBQUcsdUNBQXVDLENBQUM7QUFDckUsZ0NBQXNCLEdBQUcsbUJBQW1CLENBQUM7QUFDN0MsMEJBQWdCLEdBQUcsYUFBYSxDQUFDO0FBQ2pDLDhCQUFvQixHQUFHLGlCQUFpQixDQUFDO0FBQ3pDLDRCQUFrQixHQUFHLGVBQWUsQ0FBQztBQUNyQywwQkFBZ0IsR0FBRyxhQUFhLENBQUM7QUFDakMsbUJBQVMsR0FBRyxNQUFNLENBQUM7QUFDbkIsaUNBQXVCLEdBQUcsb0JBQW9CLENBQUM7QUFDL0MsNkJBQW1CLEdBQUcsZ0JBQWdCLENBQUM7QUFDdkMsOEJBQW9CLEdBQUcsaUJBQWlCLENBQUM7QUFDekMsZ0NBQXNCLEdBQUcsbUJBQW1CLENBQUM7QUFDN0Msb0NBQTBCLEdBQUcsdUJBQXVCLENBQUM7QUFDckQsbUNBQXlCLEdBQUcsbUJBQW1CLENBQUM7QUFDaEQsd0NBQThCLEdBQUcsNkJBQTZCLENBQUM7QUFDL0QseUNBQStCLEdBQUcscUNBQXFDLENBQUM7QUFDeEUsMkNBQWlDLEdBQUcsMkVBQTJFLENBQUM7QUFDaEgsdUNBQTZCLEdBQUcscUVBQXFFLENBQUM7QUFDdEcsdUNBQTZCLEdBQUcsdUVBQXVFLENBQUM7QUFDeEcsMENBQWdDLEdBQUcsbUVBQW1FLENBQUM7QUFDdkcsc0NBQTRCLEdBQUcsNkRBQTZELENBQUM7QUFDN0Ysc0NBQTRCLEdBQUcsK0RBQStELENBQUM7QUFDL0YsMkNBQWlDLEdBQUcsdUVBQXVFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQ29uc3RhbnRzIHtcclxuICBzdGF0aWMgVEVYVF9DQU5DRUwgPSAnQ2FuY2VsJztcclxuICBzdGF0aWMgVEVYVF9DTEVBUl9BTExfRklMVEVSUyA9ICdDbGVhciBBbGwgRmlsdGVycyc7XHJcbiAgc3RhdGljIFRFWFRfQ0xFQVJfQUxMX1NPUlRJTkcgPSAnQ2xlYXIgQWxsIFNvcnRpbmcnO1xyXG4gIHN0YXRpYyBURVhUX0NPTFVNTlMgPSAnQ29sdW1ucyc7XHJcbiAgc3RhdGljIFRFWFRfQ09NTUFORFMgPSAnQ29tbWFuZHMnO1xyXG4gIHN0YXRpYyBURVhUX0VYUE9SVF9JTl9DU1ZfRk9STUFUID0gJ0V4cG9ydCBpbiBDU1YgZm9ybWF0JztcclxuICBzdGF0aWMgVEVYVF9FWFBPUlRfSU5fVEVYVF9GT1JNQVQgPSAnRXhwb3J0IGluIFRleHQgZm9ybWF0IChUYWIgZGVsaW1pdGVkKSc7XHJcbiAgc3RhdGljIFRFWFRfRk9SQ0VfRklUX0NPTFVNTlMgPSAnRm9yY2UgZml0IGNvbHVtbnMnO1xyXG4gIHN0YXRpYyBURVhUX0hJREVfQ09MVU1OID0gJ0hpZGUgQ29sdW1uJztcclxuICBzdGF0aWMgVEVYVF9SRUZSRVNIX0RBVEFTRVQgPSAnUmVmcmVzaCBEYXRhc2V0JztcclxuICBzdGF0aWMgVEVYVF9SRU1PVkVfRklMVEVSID0gJ1JlbW92ZSBGaWx0ZXInO1xyXG4gIHN0YXRpYyBURVhUX1JFTU9WRV9TT1JUID0gJ1JlbW92ZSBTb3J0JztcclxuICBzdGF0aWMgVEVYVF9TQVZFID0gJ1NhdmUnO1xyXG4gIHN0YXRpYyBURVhUX1NZTkNIUk9OT1VTX1JFU0laRSA9ICdTeW5jaHJvbm91cyByZXNpemUnO1xyXG4gIHN0YXRpYyBURVhUX1NPUlRfQVNDRU5ESU5HID0gJ1NvcnQgQXNjZW5kaW5nJztcclxuICBzdGF0aWMgVEVYVF9TT1JUX0RFU0NFTkRJTkcgPSAnU29ydCBEZXNjZW5kaW5nJztcclxuICBzdGF0aWMgVEVYVF9UT0dHTEVfRklMVEVSX1JPVyA9ICdUb2dnbGUgRmlsdGVyIFJvdyc7XHJcbiAgc3RhdGljIFRFWFRfVE9HR0xFX1BSRV9IRUFERVJfUk9XID0gJ1RvZ2dsZSBQcmUtSGVhZGVyIFJvdyc7XHJcbiAgc3RhdGljIFZBTElEQVRJT05fUkVRVUlSRURfRklFTEQgPSAnRmllbGQgaXMgcmVxdWlyZWQnO1xyXG4gIHN0YXRpYyBWQUxJREFUSU9OX0VESVRPUl9WQUxJRF9OVU1CRVIgPSAnUGxlYXNlIGVudGVyIGEgdmFsaWQgbnVtYmVyJztcclxuICBzdGF0aWMgVkFMSURBVElPTl9FRElUT1JfVkFMSURfSU5URUdFUiA9ICdQbGVhc2UgZW50ZXIgYSB2YWxpZCBpbnRlZ2VyIG51bWJlcic7XHJcbiAgc3RhdGljIFZBTElEQVRJT05fRURJVE9SX0lOVEVHRVJfQkVUV0VFTiA9ICdQbGVhc2UgZW50ZXIgYSB2YWxpZCBpbnRlZ2VyIG51bWJlciBiZXR3ZWVuIHt7bWluVmFsdWV9fSBhbmQge3ttYXhWYWx1ZX19JztcclxuICBzdGF0aWMgVkFMSURBVElPTl9FRElUT1JfSU5URUdFUl9NQVggPSAnUGxlYXNlIGVudGVyIGEgdmFsaWQgaW50ZWdlciBudW1iZXIgdGhhdCBpcyBsb3dlciB0aGFuIHt7bWF4VmFsdWV9fSc7XHJcbiAgc3RhdGljIFZBTElEQVRJT05fRURJVE9SX0lOVEVHRVJfTUlOID0gJ1BsZWFzZSBlbnRlciBhIHZhbGlkIGludGVnZXIgbnVtYmVyIHRoYXQgaXMgZ3JlYXRlciB0aGFuIHt7bWluVmFsdWV9fSc7XHJcbiAgc3RhdGljIFZBTElEQVRJT05fRURJVE9SX05VTUJFUl9CRVRXRUVOID0gJ1BsZWFzZSBlbnRlciBhIHZhbGlkIG51bWJlciBiZXR3ZWVuIHt7bWluVmFsdWV9fSBhbmQge3ttYXhWYWx1ZX19JztcclxuICBzdGF0aWMgVkFMSURBVElPTl9FRElUT1JfTlVNQkVSX01BWCA9ICdQbGVhc2UgZW50ZXIgYSB2YWxpZCBudW1iZXIgdGhhdCBpcyBsb3dlciB0aGFuIHt7bWF4VmFsdWV9fSc7XHJcbiAgc3RhdGljIFZBTElEQVRJT05fRURJVE9SX05VTUJFUl9NSU4gPSAnUGxlYXNlIGVudGVyIGEgdmFsaWQgbnVtYmVyIHRoYXQgaXMgZ3JlYXRlciB0aGFuIHt7bWluVmFsdWV9fSc7XHJcbiAgc3RhdGljIFZBTElEQVRJT05fRURJVE9SX0RFQ0lNQUxfQkVUV0VFTiA9ICdQbGVhc2UgZW50ZXIgYSB2YWxpZCBudW1iZXIgd2l0aCBhIG1heGltdW0gb2Yge3ttYXhEZWNpbWFsfX0gZGVjaW1hbHMnO1xyXG59XHJcbiJdfQ==