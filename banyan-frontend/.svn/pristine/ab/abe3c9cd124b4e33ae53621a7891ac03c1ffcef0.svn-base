import * as moment_ from 'moment-mini';
var moment = moment_; // patch to fix rollup "moment has no default export" issue, document here https://github.com/rollup/rollup/issues/670
export function compareDates(value1, value2, format, sortDirection, strict) {
    var diff = 0;
    if (value1 === null || value1 === '' || !moment(value1, format, strict).isValid()) {
        diff = -1;
    }
    else if (value2 === null || value2 === '' || !moment(value2, format, strict).isValid()) {
        diff = 1;
    }
    else {
        var date1 = moment(value1, format, strict);
        var date2 = moment(value2, format, strict);
        diff = parseInt(date1.format('X'), 10) - parseInt(date2.format('X'), 10);
    }
    return sortDirection * (diff === 0 ? 0 : (diff > 0 ? 1 : -1));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGFyZURhdGVVdGlsaXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1zbGlja2dyaWQvIiwic291cmNlcyI6WyJhcHAvbW9kdWxlcy9hbmd1bGFyLXNsaWNrZ3JpZC9zb3J0ZXJzL2NvbXBhcmVEYXRlVXRpbGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssT0FBTyxNQUFNLGFBQWEsQ0FBQztBQUN2QyxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsQ0FBQyxzSEFBc0g7QUFFOUksTUFBTSxVQUFVLFlBQVksQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxhQUFhLEVBQUUsTUFBZ0I7SUFDbEYsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBRWIsSUFBSSxNQUFNLEtBQUssSUFBSSxJQUFJLE1BQU0sS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUNqRixJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDWDtTQUFNLElBQUksTUFBTSxLQUFLLElBQUksSUFBSSxNQUFNLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7UUFDeEYsSUFBSSxHQUFHLENBQUMsQ0FBQztLQUNWO1NBQU07UUFDTCxJQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUM3QyxJQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUM3QyxJQUFJLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDMUU7SUFFRCxPQUFPLGFBQWEsR0FBRyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgbW9tZW50XyBmcm9tICdtb21lbnQtbWluaSc7XHJcbmNvbnN0IG1vbWVudCA9IG1vbWVudF87IC8vIHBhdGNoIHRvIGZpeCByb2xsdXAgXCJtb21lbnQgaGFzIG5vIGRlZmF1bHQgZXhwb3J0XCIgaXNzdWUsIGRvY3VtZW50IGhlcmUgaHR0cHM6Ly9naXRodWIuY29tL3JvbGx1cC9yb2xsdXAvaXNzdWVzLzY3MFxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVEYXRlcyh2YWx1ZTEsIHZhbHVlMiwgZm9ybWF0LCBzb3J0RGlyZWN0aW9uLCBzdHJpY3Q/OiBib29sZWFuKSB7XHJcbiAgbGV0IGRpZmYgPSAwO1xyXG5cclxuICBpZiAodmFsdWUxID09PSBudWxsIHx8IHZhbHVlMSA9PT0gJycgfHwgIW1vbWVudCh2YWx1ZTEsIGZvcm1hdCwgc3RyaWN0KS5pc1ZhbGlkKCkpIHtcclxuICAgIGRpZmYgPSAtMTtcclxuICB9IGVsc2UgaWYgKHZhbHVlMiA9PT0gbnVsbCB8fCB2YWx1ZTIgPT09ICcnIHx8ICFtb21lbnQodmFsdWUyLCBmb3JtYXQsIHN0cmljdCkuaXNWYWxpZCgpKSB7XHJcbiAgICBkaWZmID0gMTtcclxuICB9IGVsc2Uge1xyXG4gICAgY29uc3QgZGF0ZTEgPSBtb21lbnQodmFsdWUxLCBmb3JtYXQsIHN0cmljdCk7XHJcbiAgICBjb25zdCBkYXRlMiA9IG1vbWVudCh2YWx1ZTIsIGZvcm1hdCwgc3RyaWN0KTtcclxuICAgIGRpZmYgPSBwYXJzZUludChkYXRlMS5mb3JtYXQoJ1gnKSwgMTApIC0gcGFyc2VJbnQoZGF0ZTIuZm9ybWF0KCdYJyksIDEwKTtcclxuICB9XHJcblxyXG4gIHJldHVybiBzb3J0RGlyZWN0aW9uICogKGRpZmYgPT09IDAgPyAwIDogKGRpZmYgPiAwID8gMSA6IC0xKSk7XHJcbn1cclxuIl19