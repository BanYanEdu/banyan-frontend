//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItc2xpY2tncmlkLyIsInNvdXJjZXMiOlsiYXBwL21vZHVsZXMvYW5ndWxhci1zbGlja2dyaWQvbW9kZWxzL2VkaXRvci5pbnRlcmZhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVkaXRvclZhbGlkYXRvck91dHB1dCB9IGZyb20gJy4vZWRpdG9yVmFsaWRhdG9yT3V0cHV0LmludGVyZmFjZSc7XHJcblxyXG4vKioqXHJcbiAqIFNsaWNrR3JpZCBFZGl0b3IgaW50ZXJmYWNlLCBtb3JlIGluZm8gY2FuIGJlIGZvdW5kIG9uIHRoZSBTbGlja0dyaWQgcmVwb1xyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vNnBhYy9TbGlja0dyaWQvd2lraS9Xcml0aW5nLWN1c3RvbS1jZWxsLWVkaXRvcnNcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWRpdG9yIHtcclxuICAvKiogSW5pdGlhbGl6ZSB0aGUgRWRpdG9yICovXHJcbiAgaW5pdDogKCkgPT4gdm9pZDtcclxuXHJcbiAgLyoqIFNhdmVzIHRoZSBFZGl0b3IgdmFsdWUgKi9cclxuICBzYXZlPzogKCkgPT4gdm9pZDtcclxuXHJcbiAgLyoqIENhbmNlbHMgdGhlIEVkaXRvciAqL1xyXG4gIGNhbmNlbD86ICgpID0+IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIGlmIGltcGxlbWVudGVkLCB0aGlzIHdpbGwgYmUgY2FsbGVkIGlmIHRoZSBjZWxsIGJlaW5nIGVkaXRlZCBpcyBzY3JvbGxlZCBvdXQgb2YgdGhlIHZpZXdcclxuICAgKiBpbXBsZW1lbnQgdGhpcyBpcyB5b3VyIFVJIGlzIG5vdCBhcHBlbmRlZCB0byB0aGUgY2VsbCBpdHNlbGYgb3IgaWYgeW91IG9wZW4gYW55IHNlY29uZGFyeVxyXG4gICAqIHNlbGVjdG9yIGNvbnRyb2xzIChsaWtlIGEgY2FsZW5kYXIgZm9yIGEgZGF0ZXBpY2tlciBpbnB1dClcclxuICAgKi9cclxuICBoaWRlPzogKCkgPT4gdm9pZDtcclxuXHJcbiAgLyoqIHByZXR0eSBtdWNoIHRoZSBvcHBvc2l0ZSBvZiBoaWRlICovXHJcbiAgc2hvdz86ICgpID0+IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIGlmIGltcGxlbWVudGVkLCB0aGlzIHdpbGwgYmUgY2FsbGVkIGJ5IHRoZSBncmlkIGlmIGFueSBvZiB0aGUgY2VsbCBjb250YWluZXJzIGFyZSBzY3JvbGxlZFxyXG4gICAqIGFuZCB0aGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIGVkaXRlZCBjZWxsIGlzIGNoYW5nZWRcclxuICAgKiBpZiB5b3VyIFVJIGlzIGNvbnN0cnVjdGVkIGFzIGEgY2hpbGQgb2YgZG9jdW1lbnQgQk9EWSwgaW1wbGVtZW50IHRoaXMgdG8gdXBkYXRlIHRoZVxyXG4gICAqIHBvc2l0aW9uIG9mIHRoZSBlbGVtZW50cyBhcyB0aGUgcG9zaXRpb24gb2YgdGhlIGNlbGwgY2hhbmdlc1xyXG4gICAqXHJcbiAgICogdGhlIGNlbGxCb3g6IHsgdG9wLCBsZWZ0LCBib3R0b20sIHJpZ2h0LCB3aWR0aCwgaGVpZ2h0LCB2aXNpYmxlIH1cclxuICAgKi9cclxuICBwb3NpdGlvbj86IChwb3NpdGlvbjogYW55KSA9PiB2b2lkO1xyXG5cclxuICAvKiogcmVtb3ZlIGFsbCBkYXRhLCBldmVudHMgJiBkb20gZWxlbWVudHMgY3JlYXRlZCBpbiB0aGUgY29uc3RydWN0b3IgKi9cclxuICBkZXN0cm95OiAoKSA9PiB2b2lkO1xyXG5cclxuICAvKiogc2V0IHRoZSBmb2N1cyBvbiB0aGUgbWFpbiBpbnB1dCBjb250cm9sIChpZiBhbnkpICovXHJcbiAgZm9jdXM6ICgpID0+IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIERlc2VyaWFsaXplIHRoZSB2YWx1ZShzKSBzYXZlZCB0byBcInN0YXRlXCIgYW5kIGFwcGx5IHRoZW0gdG8gdGhlIGRhdGEgaXRlbVxyXG4gICAqIHRoaXMgbWV0aG9kIG1heSBnZXQgY2FsbGVkIGFmdGVyIHRoZSBlZGl0b3IgaXRzZWxmIGhhcyBiZWVuIGRlc3Ryb3llZFxyXG4gICAqIHRyZWF0IGl0IGFzIGFuIGVxdWl2YWxlbnQgb2YgYSBKYXZhL0MjIFwic3RhdGljXCIgbWV0aG9kIC0gbm8gaW5zdGFuY2UgdmFyaWFibGVzIHNob3VsZCBiZSBhY2Nlc3NlZFxyXG4gICAqL1xyXG4gIGFwcGx5VmFsdWU6IChpdGVtOiBhbnksIHN0YXRlOiBhbnkpID0+IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIExvYWQgdGhlIHZhbHVlKHMpIGZyb20gdGhlIGRhdGEgaXRlbSBhbmQgdXBkYXRlIHRoZSBVSVxyXG4gICAqIHRoaXMgbWV0aG9kIHdpbGwgYmUgY2FsbGVkIGltbWVkaWF0ZWx5IGFmdGVyIHRoZSBlZGl0b3IgaXMgaW5pdGlhbGl6ZWRcclxuICAgKiBpdCBtYXkgYWxzbyBiZSBjYWxsZWQgYnkgdGhlIGdyaWQgaWYgaWYgdGhlIHJvdy9jZWxsIGJlaW5nIGVkaXRlZCBpcyB1cGRhdGVkIHZpYSBncmlkLnVwZGF0ZVJvdy91cGRhdGVDZWxsXHJcbiAgICovXHJcbiAgbG9hZFZhbHVlOiAoaXRlbTogYW55KSA9PiB2b2lkO1xyXG5cclxuICAvKipcclxuICAgKiBSZXR1cm4gdGhlIHZhbHVlKHMpIGJlaW5nIGVkaXRlZCBieSB0aGUgdXNlciBpbiBhIHNlcmlhbGl6ZWQgZm9ybVxyXG4gICAqIGNhbiBiZSBhbiBhcmJpdHJhcnkgb2JqZWN0XHJcbiAgICogdGhlIG9ubHkgcmVzdHJpY3Rpb24gaXMgdGhhdCBpdCBtdXN0IGJlIGEgc2ltcGxlIG9iamVjdCB0aGF0IGNhbiBiZSBwYXNzZWQgYXJvdW5kIGV2ZW5cclxuICAgKiB3aGVuIHRoZSBlZGl0b3IgaXRzZWxmIGhhcyBiZWVuIGRlc3Ryb3llZFxyXG4gICAqL1xyXG4gIHNlcmlhbGl6ZVZhbHVlOiAoKSA9PiBhbnk7XHJcblxyXG4gIC8qKiByZXR1cm4gdHJ1ZSBpZiB0aGUgdmFsdWUocykgYmVpbmcgZWRpdGVkIGJ5IHRoZSB1c2VyIGhhcy9oYXZlIGJlZW4gY2hhbmdlZCAqL1xyXG4gIGlzVmFsdWVDaGFuZ2VkOiAoKSA9PiBib29sZWFuO1xyXG5cclxuICAvKipcclxuICAgKiBWYWxpZGF0ZSB1c2VyIGlucHV0IGFuZCByZXR1cm4gdGhlIHJlc3VsdCBhbG9uZyB3aXRoIHRoZSB2YWxpZGF0aW9uIG1lc3NhZ2UsIGlmIGFueVxyXG4gICAqIGlmIHRoZSBpbnB1dCBpcyB2YWxpZCwgcmV0dXJuIHt2YWxpZDp0cnVlLG1zZzpudWxsfVxyXG4gICAqL1xyXG4gIHZhbGlkYXRlOiAoKSA9PiBFZGl0b3JWYWxpZGF0b3JPdXRwdXQ7XHJcbn1cclxuIl19